---
import "../../styles/urika.css"
import BaseLayout from '../../layouts/BaseLayout.astro'
import PublicationsForm from '../../components/PublicationsForm.svelte'
import Header from '../../components/blocks/Header.astro'
import directus from "../../../lib/directus"
import { readItems } from '@directus/sdk';

export async function getStaticPaths() {
    const publications = await directus.request(readItems("publications", {
        filter: {
            status: { _eq: "published" },
        },
        fields: ["title", "permalink", "abstract", "id", "authors", "year"],
    }))
    return publications.map((publication) => ({
        params: { permalink: "/" + publication.permalink },
        props: publication,
    }))
}
const publication = Astro.props
---

<BaseLayout title="URIKA [publication]">
    <Header title="PUBLICATIONS" branded="true" link="/publications" />
    <h1 class="fade-in text-zinc-700 dark:text-zinc-300 font-georgia text-4xl md:text-5xl text-center mt-8 mb-2 font-extrabold">{publication.title}</h1>
    <p class="fade-in text-center text-xl md:text-3xl mb-2 text-zinc-400 dark:text-zinc-500 font-extrabold">{publication.year}</p>
    <div id="authors" class="flex flex-col items-center md:flex-row md:flex-wrap justify-center mb-6 text-xl md:text-2xl">
        {publication.authors.map((author, index) => (
            <div class="inline-flex fade-in text-center font-medium text-urika-orange-600 dark:text-urika-orange-500" data-author>
                <h2 class="mx-4">
                    {author.first_name}
                    {author.middle_name && ` ${author.middle_name}`}
                    {` ${author.last_name}`}
                </h2>
                <span class="bullet hidden md:block">{index < publication.authors.length - 1 && "â€¢"}</span>
            </div>
        ))}
    </div>
    <div class="flex flex-col lg:flex-row gap-10">
        <div class="flex flex-col">
            <h3 class="fade-in text-4xl md:text-5xl font-extrabold text-center mt-4 text-urika-blue-800 dark:text-urika-blue-600">ABSTRACT</h3>
            <div class="fade-in mt-4 *:indent-16 text-justify text-base md:text-xl font-georgia">
                <Fragment set:html={publication.abstract} />
            </div>
        </div>
        <div class="lg:mt-12">
            <PublicationsForm publication_id={publication.id} client:load />
        </div>
    </div>
</BaseLayout>

<script type="module" data-astro-rerun>
    document.addEventListener('astro:page-load', () => {
        init();
    });
    document.addEventListener('animationstart', () => {
        init();
    });

    function init() {
        const authorElements = document.querySelectorAll('#authors [data-author]');
        // initial run
        removeEndOfRowBullets(authorElements);
        // re-check on window resize
        window.addEventListener('resize', () => {
            // before recalculating, reset bullet display in case it was hidden previously
            authorElements.forEach(el => {
                const bullet = el.querySelector('.bullet');
                if (bullet) bullet.style.opacity = 100;
            });
            removeEndOfRowBullets(authorElements);
        });
    }

    function removeEndOfRowBullets(authorElements) {
        authorElements.forEach((el, index) => {
            const nextEl = authorElements[index + 1];
            // if there's no nextEl, don't hide bullet (last item in entire list)
            if (!nextEl) return;

            const currentRect = el.getBoundingClientRect();
            const nextRect = nextEl.getBoundingClientRect();
            // if the bottoms differ significantly => nextEl wrapped onto a new line
            if (Math.abs(currentRect.bottom - nextRect.bottom) > 5) {
                const bullet = el.querySelector('.bullet');
                if (bullet) {
                    bullet.style.opacity = 0;
                }
            }
        });
    }
</script>
