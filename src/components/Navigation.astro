---
const { menu_items, logo } = Astro.props
function normalizeUrl(url) {
    return url.replace(/\/$/, "");
}
const currentPath = normalizeUrl(Astro.url.pathname);

---

<nav class="fixed top-0 flex gap-8 justify-between items-center px-4 py-8 z-50 h-16 bg-white w-full">
  <button class="menu-btn mobile-only p-4 pl-2 rounded-full outline-none" id="menu-button" aria-label="Menu">
    <span class="menu-btn__burger"></span>
  </button>

  <div class="nav-wrapper flex justify-center" id="nav-wrapper" transition:name="menu">
    <div id="main-navigation">
        <ul class="nav-buttons flex gap-4">
            {menu_items.map((item) => (
                <li class="hover:bg-urika-orange-100 rounded-full transition">
                    { normalizeUrl(item.permalink) === currentPath ? (
                        <span class="block w-full px-4 py-2 bg-urika-orange-300 rounded-full cursor-pointer">{item.title}</span>
                    ) : (
                        <a class="block px-4 py-2" href={item.permalink}>{item.title}</a>
                    )}
                </li>
            ))}
        </ul>
    </div>
    <div id="secondary-navigation" class="mobile-only flex justify-end">
        <img src={`https://admin.urikabioworks.com/assets/${logo}`} alt="URIKA Logo" class="h-12" />
    </div>
  </div>

  <div class="overlay mobile-only" id="overlay"></div>
</nav>

<script>
  document.addEventListener('astro:page-load', () => {
      mountMenuListeners();
  });

  const mountMenuListeners = () => {
    const menuButton = document.getElementById('menu-button');
    const navWrapper = document.getElementById('nav-wrapper');
    const overlay = document.getElementById('overlay');
    let menuOpen = false;

    const openMenu = () => {
      menuOpen = true;
      const { documentElement: html } = document;
      const scrollbarWidth = getScrollbarWidth();
      if (scrollbarWidth) {
        html.style.setProperty('--scrollbar-width', `${scrollbarWidth}px`);
      }
      html.classList.add('menu-is-open');
      menuButton.classList.add('open');
      navWrapper.classList.add('open');
      overlay.classList.add('open');
    };

    // Get scrollbar width
    const getScrollbarWidth = () => {
      const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
      return scrollbarWidth;
    };

    const closeMenu = () => {
      menuOpen = false;
      const { documentElement: html } = document;
      html.classList.remove('menu-is-open');
      menuButton.classList.remove('open');
      navWrapper.classList.remove('open');
      overlay.classList.remove('open');
    };

    // Toggle menu with button
    menuButton.addEventListener('click', () => {
      menuOpen ? closeMenu() : openMenu();
    });

    // Close menu when clicking outside
    overlay.addEventListener('click', () => {
      closeMenu();
    });
  }
</script>
